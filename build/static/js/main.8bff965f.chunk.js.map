{"version":3,"sources":["mockData.ts","utils.js","DrugInfo.js","index.js"],"names":["stages","name","id","status","targets","data","stage","target","drugAmount","toString","Object","prototype","reduceFieldsOfObj","datas","fields","call","Error","result","forEach","field","renderAmountInPlot","objKey","pillars","render","drawMap","text","item","index","pillarIndex","pointValue","point","mockData","药品全球研发阶段","临床前","临床0期","临床I期","临床II期","window","test","rrr","console","log","DrugInfo","_React$useState","React","useState","_React$useState2","slicedToArray","stageData","dv","DataSet","createView","source","transform","type","key","value","react_default","a","createElement","BizCharts","onPlotClick","event","height","forceFit","onTooltipChange","itemsLength","items","length","i","concat","itemFormatter","val","label","dataType","position","color","active","highlight","content","htmlTemplate","activeColors","inactiveColors","stageAxis","stageName2IndexMap","includes","push","targetAxis","targetName2IndexMap","chartData","stageStatus","activeExtreme","inactiveExtreme","min","max","ReactDOM","currentPage","setCurrentPage","_React$useState3","slice","_React$useState4","setData","locale_provider","locale","zhCn","className","src_DrugInfo","padding","scale","values","tooltip","piece","pieceIndex","Number","parseInt","textStyle","fill","shadowBlur","shadowColor","offset","pagination","onChange","Math","round","random","showQuickJumper","total","current","pageSize","document","getElementById"],"mappings":"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","file":"static/js/main.8bff965f.chunk.js","sourcesContent":["const stages = [\n  {\n    name: '临床前',\n    id: 0,\n    status: 'active'\n  },\n  {\n    name: '临床0期',\n    id: 1,\n    status: 'active'\n  },\n  {\n    name: '临床I期',\n    id: 2,\n    status: 'active'\n  },\n  {\n    name: '临床I/II期',\n    id: 3,\n    status: 'active'\n  },\n  {\n    name: '临床II期',\n    id: 4,\n    status: 'active'\n  },\n  {\n    name: '临床II/III期',\n    id: 5,\n    status: 'active'\n  },\n  {\n    name: '临床III期',\n    id: 6,\n    status: 'active'\n  },\n  {\n    name: '上市申请',\n    id: 7,\n    status: 'active'\n  },\n  {\n    name: '批准上市',\n    id: 8,\n    status: 'active'\n  },\n  {\n    name: '已上市',\n    id: 9,\n    status: 'active'\n  },\n  {\n    name: '无进展',\n    id: 10,\n    status: 'inactive'\n  },\n  {\n    name: '研发暂停',\n    id: 11,\n    status: 'inactive'\n  },\n  {\n    name: '研发失败',\n    id: 12,\n    status: 'inactive'\n  },\n  {\n    name: '撤销上市申请',\n    id: 13,\n    status: 'inactive'\n  },\n  {\n    name: '撤市',\n    id: 14,\n    status: 'inactive'\n  }\n]\n\nconst targets = [\n  {\n    name: 'PD-1',\n    id: 42\n  },\n  {\n    name: 'PD-2',\n    id: 43\n  },\n  {\n    name: 'PD-3',\n    id: 44\n  },\n  {\n    name: 'PD-4',\n    id: 45\n  },\n  {\n    name: 'PD-5',\n    id: 46\n  },\n  {\n    name: 'PD-6',\n    id: 47\n  }\n]\n\nexport const data = [\n  {\n    stage: stages[0],\n    target: targets[0],\n    drugAmount: 10\n  },\n  {\n    //     相同阶段, 不同靶点的数据\n    stage: stages[1],\n    target: targets[0],\n    drugAmount: 20\n  },\n  {\n    //     不同阶段, 不同靶点的数据\n    stage: stages[1],\n    target: targets[1],\n    drugAmount: 40\n  },\n  {\n    stage: stages[2],\n    target: targets[1],\n    drugAmount: 90\n  },\n  {\n    stage: stages[3],\n    target: targets[1],\n    drugAmount: 90\n  },\n  {\n    stage: stages[4],\n    target: targets[1],\n    drugAmount: 200\n  },\n  {\n    stage: stages[5],\n    target: targets[1],\n    drugAmount: 200\n  },\n  {\n    stage: stages[6],\n    target: targets[1],\n    drugAmount: 200\n  },\n  {\n    stage: stages[7],\n    target: targets[1],\n    drugAmount: 200\n  },\n  {\n    stage: stages[8],\n    target: targets[1],\n    drugAmount: 200\n  },\n  {\n    stage: stages[9],\n    target: targets[1],\n    drugAmount: 200\n  },\n  {\n    stage: stages[10],\n    target: targets[1],\n    drugAmount: 10\n  },\n  {\n    stage: stages[11],\n    target: targets[1],\n    drugAmount: 30\n  },\n  {\n    stage: stages[12],\n    target: targets[1],\n    drugAmount: 60\n  },\n  {\n    stage: stages[13],\n    target: targets[1],\n    drugAmount: 200\n  },\n  {\n    stage: stages[14],\n    target: targets[1],\n    drugAmount: 300\n  },\n  {\n    stage: stages[14],\n    target: targets[2],\n    drugAmount: 250\n  },\n  {\n    stage: stages[14],\n    target: targets[3],\n    drugAmount: 500\n  },\n  {\n    stage: stages[5],\n    target: targets[3],\n    drugAmount: 50\n  }\n]\n","const toString = Object.prototype.toString\n\n/**\n * @param {{}[]} data\n * @param {string[]} fields\n */\nexport const reduceFieldsOfObj = (datas, fields) => {\n  if (toString.call(datas) !== '[object Array]') {\n    throw new Error('第一个参数必须为 Array')\n  }\n\n  if (toString.call(fields) !== '[object Array]') {\n    throw new Error('第二个参数必须为 Array')\n  }\n\n  const result = {}\n\n  fields.forEach(field => {\n    datas.forEach(data => {\n      if (data[field]) {\n        result[field] = (result[field] || 0) + data[field]\n      }\n    })\n  })\n\n  return result\n}\n\n/**\n * \n * @param {string} objKey 对象的 key\n * @param {number} pillars 柱子数量\n * @param {(index: number, item: {}) => void} render \n */\nexport const renderAmountInPlot = (objKey, pillars, render) => {\n  const drawMap = {}\n  return (text, item, index) => {\n    /** 当前处在的柱子的索引值, 从 0 开始 */\n    const pillarIndex = index % pillars\n    const pointValue = item.point[objKey]\n\n    if (index < pillars) {\n      // 处在第一层数据中, 如果有数据, 说明还图形存在,\n      if (pointValue) {\n        // 存下该柱子已经被绘制\n        drawMap[pillarIndex] = true\n        // 调用 render 回调\n        return render(index, item)\n      }\n    } else {\n      // 处在非第一层数据中, 判断该柱子是否已经被绘制\n      if (\n        // 如果该柱子还没有被绘制\n        !drawMap[pillarIndex] &&\n        // 并且该节点存在数据\n        pointValue\n      ) {\n        // 存下该柱子已经被绘制\n        drawMap[pillarIndex] = true\n        // 调用 render 回调\n        return render(index, item)\n      }\n    }\n\n  }\n}\n","import React from 'react'\nimport { Chart, Geom, Axis, Tooltip, Legend, Label } from 'bizcharts'\nimport DataSet from '@antv/data-set'\nimport { reduceFieldsOfObj, renderAmountInPlot } from './utils'\nimport { Button } from 'antd';\n\nconst mockData = [\n  {\n    药品全球研发阶段: '临床前',\n    临床前: 5,\n    临床0期: 6,\n    临床I期: 98\n  },\n  {\n    药品全球研发阶段: '临床0期',\n    临床前: 56,\n    临床0期: 34,\n    临床I期: 98\n  },\n  {\n    药品全球研发阶段: '临床I期',\n    临床前: 56,\n    临床I期: 98\n  },\n  {\n    药品全球研发阶段: '临床II期',\n    临床前: 56,\n    临床I期: 98,\n    临床II期: 99\n  }\n]\n\nconst fields = ['临床前', '临床0期', '临床I期', '临床II期']\n\nwindow.test = rrr => {\n  console.log(rrr)\n}\n\nfunction DrugInfo() {\n  const [data, setData] = React.useState(mockData)\n\n  const stageData = reduceFieldsOfObj(data, fields)\n\n  const ds = new DataSet()\n  const dv = ds.createView().source(data)\n  dv.transform({\n    type: 'fold',\n    fields: fields,\n    key: '阶段',\n    value: '数量'\n  })\n  // console.log(dv)\n\n  const handlePlotClick = event => {\n    // console.log(event)\n    // window.open('https://www.bing.com', '_target')\n  }\n\n  return (\n    <div>\n      <Chart\n        onPlotClick={handlePlotClick}\n        data={dv}\n        height={400}\n        forceFit\n        onTooltipChange={event => {\n          // // let items = event.items\n          // // items = items.map(item => {\n          // //   return {\n          // //     ...item,\n          // //     title: `药品-${item.name}`\n          // //   }\n          // // })\n          // // return items\n          // event.items = event.items.map(item => ({\n          //   ...item,\n          //   name: '555'\n          // }))\n          const itemsLength = event.items.length\n\n          //  只能这样设置, 请勿使用上面注释中的方式来修改\n          // 看起来是应为 event.items 对象不能被覆盖式的修改\n          for (let i = 0; i < itemsLength; i++) {\n            event.items[i].name = `药品-${event.items[i].name}`\n          }\n        }}\n      >\n        <Legend itemFormatter={val => `药品-${val}`} />\n        <Axis name=\"阶段\" label={{ dataType: 'x' }} />\n        <Axis name=\"数量\" label={{ dataType: 'y' }} />\n        <Tooltip />\n        <Geom\n          type=\"intervalStack\"\n          position=\"阶段*数量\"\n          color=\"药品全球研发阶段\"\n          active={[\n            true,\n            {\n              highlight: true\n            }\n          ]}\n        >\n          <Label\n            content=\"临床前\"\n            htmlTemplate={renderAmountInPlot('数量', fields.length, (index, item) => {\n              console.log(index)\n              return `\n                <a class=\"GND-Chart-totalInPillar\" style=\"white-space:nowrap\">${\n                  stageData[item.point['阶段']]\n                }</a>\n              `\n            })}\n          />\n        </Geom>\n      </Chart>\n    </div>\n  )\n}\n\nexport default DrugInfo\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Chart, Geom, Axis, Tooltip, Label } from 'bizcharts'\nimport { Pagination, LocaleProvider } from 'antd'\nimport zhCn from 'antd/lib/locale-provider/zh_CN'\nimport { data } from './mockData'\nimport DrugInfo from './DrugInfo'\n\nimport 'antd/dist/antd.css'\n\n/**\n * @description 活跃状态下的阶段的颜色, 由浅至深\n * @type {string[]}\n */\nconst activeColors = [\n  '#d0f0ff',\n  '#b4e3fd',\n  '#91d5ff',\n  '#40a9ff',\n  '#0a6dd9',\n  '#0050b3',\n  '#002766'\n]\n\nconst inactiveColors = [\n  '#fff0a3',\n  '#ffe58f',\n  '#ffd667',\n  '#faad15',\n  '#d48806',\n  '#ad6800',\n  '#613401'\n]\n\n// 从 data 中抽离出 阶段 axis\n/**\n * @description 阶段轴 数据\n * @type {string[]}\n * ['临床前', '临床0期']\n */\nconst stageAxis = []\n/**\n * @description 阶段 name 在 stageAxis 中的索引值\n */\nconst stageName2IndexMap = {}\n\ndata.forEach(item => {\n  const { stage } = item\n  if (!stageAxis.includes(stage.name)) {\n    stageName2IndexMap[stage.name] = stageAxis.length\n    stageAxis.push(stage.name)\n  }\n})\n\n// 从 data 轴抽离出 target axis\n/**\n * @description 靶点轴 数据\n * @type {string[]}\n * ['PD-1', 'PD-2']\n */\nconst targetAxis = []\nconst targetName2IndexMap = {}\n\ndata.forEach(item => {\n  const { target } = item\n  if (!targetAxis.includes(target.name)) {\n    targetName2IndexMap[target.name] = targetAxis.length\n    targetAxis.push(target.name)\n  }\n})\n\n// 处理 data 数据来 生成 Chart 组件需要的 data\nconst chartData = []\n\ndata.forEach(item => {\n  const { stage, target, drugAmount } = item\n\n  chartData.push({\n    stage: stageName2IndexMap[stage.name],\n    target: targetName2IndexMap[target.name],\n    drugAmount,\n    stageStatus: stage.status\n  })\n})\n\n// 获取 活跃(active) & 非活跃(inactive) 的 min & max drugAmount\nconst activeExtreme = [0, 0]\nconst inactiveExtreme = [0, 0]\n\ndata.forEach(item => {\n  const { stage, drugAmount } = item\n\n  // 活跃状态的数据\n  if (stage.status === 'active') {\n    const [min, max] = activeExtreme\n\n    if (drugAmount < min) {\n      activeExtreme[0] = drugAmount\n    } else if (drugAmount > max) {\n      activeExtreme[1] = drugAmount\n    }\n  } else if (stage.status === 'inactive') {\n    const [min, max] = inactiveExtreme\n    if (drugAmount < min) {\n      inactiveExtreme[0] = drugAmount\n    } else if (drugAmount > max) {\n      inactiveExtreme[1] = drugAmount\n    }\n  }\n})\n\nfunction App() {\n  const [currentPage, setCurrentPage] = React.useState(1)\n  const [data, setData] = React.useState(chartData.slice(0, 10))\n\n  const handlePlotClick = event => {\n    // 传递参数 药品名&药品ID&阶段(stage)&靶点(target)\n    // window.open('http://www.bing.com', '_blank')\n    console.log(event)\n  }\n\n  const handlePaginationChange = event => {\n    setCurrentPage(event)\n    setData(\n      chartData.slice(\n        Math.round(Math.random() * 5) + 1,\n        Math.round(Math.random() * chartData.length) - 1\n      )\n    )\n  }\n\n  return (\n    <LocaleProvider locale={zhCn}>\n      <div className=\"App\">\n        <DrugInfo />\n        <Chart\n          data={data}\n          padding=\"auto\"\n          scale={{\n            stage: {\n              type: 'cat',\n              values: stageAxis\n            },\n            target: {\n              type: 'cat',\n              values: targetAxis\n            }\n          }}\n          height={200}\n          forceFit\n          onPlotClick={handlePlotClick}\n        >\n          <Axis name=\"stage\" position=\"top\" />\n          <Axis name=\"target\" />\n          <Geom\n            type=\"polygon\"\n            position=\"stage*target\"\n            tooltip={[\n              'drugAmount',\n              drugAmount => {\n                return {\n                  name: '药品数量',\n                  value: drugAmount\n                }\n              }\n            ]}\n            color={[\n              'drugAmount*stageStatus',\n              (drugAmount, stageStatus) => {\n                if (stageStatus === 'active') {\n                  const [, max] = activeExtreme\n                  const piece = max / activeColors.length\n\n                  let pieceIndex = Number.parseInt(drugAmount / piece, 10)\n                  if (pieceIndex === 0) {\n                    pieceIndex = 1\n                  }\n                  return activeColors[pieceIndex - 1]\n                } else if (stageStatus === 'inactive') {\n                  const [, max] = inactiveExtreme\n                  const piece = max / inactiveColors.length\n\n                  let pieceIndex = Number.parseInt(drugAmount / piece, 10)\n                  if (pieceIndex === 0) {\n                    pieceIndex = 1\n                  }\n                  return inactiveColors[pieceIndex - 1]\n                }\n              }\n            ]}\n          >\n            <Tooltip />\n            <Label\n              textStyle={{\n                fill: '#fff',\n                shadowBlur: 2,\n                shadowColor: 'rgba(0, 0, 0, .45)'\n              }}\n              offset={-2}\n              content=\"drugAmount\"\n            />\n          </Geom>\n        </Chart>\n        <Pagination\n          onChange={handlePaginationChange}\n          showQuickJumper\n          total={400}\n          current={currentPage}\n          pageSize={10}\n        />\n      </div>\n    </LocaleProvider>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}